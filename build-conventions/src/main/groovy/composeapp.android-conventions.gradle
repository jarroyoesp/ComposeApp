plugins {
    id 'com.google.devtools.ksp'
    id 'composeapp.detekt-conventions'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

kapt {
    useBuildCache = true
    correctErrorTypes true
    javacOptions {
        option('-Xmaxerrs', Integer.MAX_VALUE)
    }
}

android {
    compileSdk config.android.compileSdk

    defaultConfig {
        minSdk config.android.minSdk
        targetSdk config.android.targetSdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner" // JAE review JUnitRunner
        // The following argument makes the Android Test Orchestrator run its
        // "pm clear" command after each test invocation. This command ensures
        // that the app's state is completely cleared between tests.
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }
    compileOptions {
        coreLibraryDesugaringEnabled true  // https://developer.android.com/studio/write/java8-support#library-desugaring
        sourceCompatibility config.android.javaVersion
        targetCompatibility config.android.javaVersion
    }
    kotlinOptions {
        freeCompilerArgs += '-opt-in=kotlin.RequiresOptIn'
        freeCompilerArgs += '-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi'
        freeCompilerArgs += '-opt-in=kotlinx.coroutines.FlowPreview'
        jvmTarget = config.android.javaVersion
    }
    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
        animationsDisabled = true
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
        }
    }
    lint {
        abortOnError true
        checkAllWarnings false
        checkDependencies true
        checkReleaseBuilds false
        ignoreTestSources true
        warningsAsErrors false
        disable 'ResourceType'
        lintConfig file("${project.rootDir}/config/lint/lint.xml")
    }
    packagingOptions {
        resources {
            // Use this block to exclude conflicting files that breaks your APK assemble task
            exclude "META-INF/LICENSE.md"
            exclude "META-INF/LICENSE-notice.md"
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }
}

kotlin {
    sourceSets.all {
        languageSettings {
            progressiveMode = true // deprecations and bug fixes for unstable code take effect immediately
        }
    }
}

tasks.withType(Test) {
    testLogging {
        events "skipped", "failed"
    }
}

dependencies {
    implementation libs.androidx.core.ktx
    implementation libs.coroutines.android
    implementation libs.coroutines.core
    implementation libs.kotlinx.collections.immutable
    coreLibraryDesugaring libs.desugar
    // JAE testImplementation projects.modules.libraryTest
    testImplementation libs.mockk
    // JAE androidTestImplementation projects.modules.libraryTest
    androidTestImplementation libs.androidx.test.espresso.core
    androidTestImplementation libs.androidx.test.ext.junit
    androidTestImplementation libs.androidx.test.runner
    androidTestImplementation libs.mockk.android
    androidTestUtil libs.androidx.test.orchestrator
}
